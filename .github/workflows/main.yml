name: Deploy to shinyapps.io
on:

  # run on any push 
  push:
    branches:
      - main

  # run on request (via button in Actions menu)
  workflow_dispatch:
      
jobs:
  shiny-deploy:
    runs-on: ubuntu-22.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
      FIREBASE_MEASUREMENT_ID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
      
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          r-version: '4.4.2'

      - uses: r-lib/actions/setup-renv@v2
          
      # Step 1: Generate firebase-config.js
      - name: Generate firebase-config.js
        run: |
          mkdir -p www
          cat > www/firebase-config.js <<EOL
          const firebaseConfig = {
            apiKey: "$FIREBASE_API_KEY",
            authDomain: "$FIREBASE_AUTH_DOMAIN",
            databaseURL: "$FIREBASE_DATABASE_URL",
            projectId: "$FIREBASE_PROJECT_ID",
            storageBucket: "$FIREBASE_STORAGE_BUCKET",
            messagingSenderId: "$FIREBASE_MESSAGING_SENDER_ID",
            appId: "$FIREBASE_APP_ID",
            measurementId: "$FIREBASE_MEASUREMENT_ID"
          };
          EOL
          echo "firebase-config.js generated."
        shell: bash

      # Step 2: Install R packages and deploy
      - name: Install packages and deploy
        env:
          RS_TOKEN: ${{ secrets.TOKEN }}
          RS_SECRET: ${{ secrets.SECRET }}
        run: |
          rsconnect::setAccountInfo(name='easyeyes', token=Sys.getenv('RS_TOKEN'), secret=Sys.getenv('RS_SECRET'))
          rsconnect::deployApp(appName = 'easyeyes_app', forceUpdate = TRUE)
        shell: Rscript {0}

      # Step 3: Notify Slack on Success
      - name: Slack Notification - Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: "✅ Deployment to shinyapps.io succeeded!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 4: Notify Slack on Failure
      - name: Slack Notification - Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "❌ Deployment to shinyapps.io failed!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
